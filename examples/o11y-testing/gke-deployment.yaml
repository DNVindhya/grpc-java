apiVersion: v1
kind: Namespace
metadata:
  name: example-grpc-server
  labels:
    name: example-grpc-server
---
apiVersion: v1
kind: Namespace
metadata:
  name: example-grpc-client
  labels:
    name: example-grpc-client
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: example-grpc-server-sc
  namespace: example-grpc-server
  annotations:
    iam.gke.io/gcp-service-account: ${PROJNUM}-compute@developer.gserviceaccount.com
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: example-grpc-client-sc
  namespace: example-grpc-client
  annotations:
    iam.gke.io/gcp-service-account: ${PROJNUM}-compute@developer.gserviceaccount.com
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: appconfig
  namespace: example-grpc-server
data:
  GRPC_CONFIG_OBSERVABILITY: |
    {
      "enable_cloud_logging": true,
      "log_filters": [{
          "pattern": "*"
      }]
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: appconfig
  namespace: example-grpc-client
data:
  GRPC_CONFIG_OBSERVABILITY: |
    {
      "enable_cloud_logging": true,
      "log_filters": [{
          "pattern": "*"
      }]
    }
---
apiVersion: v1
kind: Service
metadata:
  name: example-grpc-server
  namespace: example-grpc-server
  labels:
    k8s-app: example-grpc-server
spec:
  ports:
  - name: helloworld
    port: 8080
    protocol: TCP
    targetPort: 50051
  selector:
    k8s-app: example-grpc-server
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-grpc-server
  namespace: example-grpc-server
  labels:
    k8s-app: example-grpc-server
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: example-grpc-server
  strategy: {}
  template:
    metadata:
      labels:
        k8s-app: example-grpc-server
    spec:
      containers:
      - image: gcr.io/vindhyan-gke-dev/o11y-examples:1.00
        imagePullPolicy: Always
        name: &container1name example-grpc-server-container
        env:
        - name: CONTAINER_NAME
          value: *container1name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: appconfig
        ports:
        - protocol: TCP
          containerPort: 50051
        resources:
          limits:
            cpu: 800m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 512Mi
      serviceAccountName: example-grpc-server-sc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-grpc-client
  namespace: example-grpc-client
  labels:
    k8s-app: example-grpc-client
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: example-grpc-client
  strategy: {}
  template:
    metadata:
      labels:
        k8s-app: example-grpc-client
    spec:
      containers:
      - image: gcr.io/vindhyan-gke-dev/o11y-examples:1.00
        imagePullPolicy: Always
        name: &container2name example-grpc-client-container
        env:
        - name: CONTAINER_NAME
          value: *container2name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: appconfig
        resources:
          limits:
            cpu: 800m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 512Mi
      serviceAccountName: example-grpc-client-sc