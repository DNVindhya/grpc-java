plugins {
    id "application"
    id "java-library"
    id "maven-publish"

    id "com.google.protobuf"
    id "ru.vyarus.animalsniffer"
}

description = "gRPC: Observability"
dependencies {
    api project(':grpc-api')
    def cloudLoggingVersion = '3.6.1'

    implementation libraries.guava,
            project(':grpc-protobuf'),
            project(':grpc-stub')

    implementation ("com.google.cloud:google-cloud-logging:${cloudLoggingVersion}") {
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'com.google.api.grpc', module: 'proto-google-common-protos'
    }

    testImplementation project(':grpc-testing'),
            project(':grpc-testing-proto'),
            project(':grpc-netty-shaded')
    testImplementation (libraries.guava_testlib) {
        exclude group: 'junit', module: 'junit'
    }

    signature "org.codehaus.mojo.signature:java18:1.0@signature"
}

configureProtoCompilation()

startScripts.enabled = false

task clientLogger(type: CreateStartScripts) {
    mainClass = 'io.grpc.observability.logging.ClientLogger'
    applicationName = 'client-logger'
    outputDir = new File(project.buildDir, 'tmp/scripts/' + name)
    classpath = startScripts.classpath
}

task cloudSample(type: CreateStartScripts) {
    mainClass = 'io.grpc.observability.logging.CloudLoggingSample'
    applicationName = 'cloud-sample'
    outputDir = new File(project.buildDir, 'tmp/scripts/' + name)
    classpath = startScripts.classpath
}

applicationDistribution.into('bin') {
    from(clientLogger)
    from(cloudSample)
    fileMode = 0755
}